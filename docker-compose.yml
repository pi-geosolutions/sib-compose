version: '3.1'

volumes:
  esdata:
  pgdata:
  pglog:
  nginxlog:


networks:
  traefik-proxy_proxy_network:
    external: true
  default:


services:
  www:
    image: nginx
    # ports:
    #   - 80:80
    #   - 443:443
    environment:
      - NGINX_PUBLIC_HOST=$FQDN
    volumes:
      - ./nginx_local:/etc/nginx/templates
      - nginxlog:/var/log/nginx
    depends_on:
      - geonetwork
      - geoserver
      - static
    networks:
      - traefik-proxy_proxy_network
      - default
    restart: always
    labels:
      - "traefik.enable=true"
      # Tell traefik which network to look on, since this container is connected to 2 different nets
      - "traefik.docker.network=traefik-proxy_proxy_network"
      # HTTPS router
      - "traefik.http.routers.www-sib.entrypoints=websecure"
      - "traefik.http.routers.www-sib.rule=Host(`sib1.dev.pigeosolutions.fr`)"
      - "traefik.http.routers.www-sib.tls=true"
      - "traefik.http.routers.www-sib.tls.certresolver=letsEncrypt"
      - "traefik.http.routers.www-sib.tls.domains[0].main=sib1.dev.pigeosolutions.fr"


  # Serve static files. Bunkerweb is a "secured" nginx, used by MNHN
  static:
    image: bunkerity/bunkerweb:1.5.2
    # ports:
    #   - 8082:8080
    environment:
      - MAX_CLIENT_SIZE=10m
      - USE_BAD_BEHAVIOR=yes
      - USE_MODSECURITY=yes
      - LOG_LEVEL=info
      - AUTO_LETS_ENCRYPT=no
      - ROOT_FOLDER=/usr/share/nginx/html
    volumes:
      - ./nginx_html:/usr/share/nginx/html
    networks:
      - default
    restart: always



  database:
    image: postgis/postgis:11-2.5
    environment:
      POSTGRES_USER: geonetwork
      POSTGRES_PASSWORD: geonetwork
      POSTGRES_DB: geonetwork
    command: [ "postgres",
               "-c", "log_statement=all",
               "-c", "logging_collector=true",
               "-c", "log_file_mode=0644",
               "-c", "log_directory=/var/log/postgresql",
               "-c", "log_filename=postgresql.log" ]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - pglog:/var/log/postgresql
      - ./volumes/backups/database:/apps/backups/database
    networks:
      - default


  geonetwork:
    image: pigeosolutions/sib-geonetwork:4.2.4-20231208-1147-ee8a555
    restart: always
    environment:
      DATA_DIR: /catalog
      ENABLE_CAS: "yes"
      CAS_BASE_URL: https://test-cas-patrinat.mnhn.fr/auth
      ENABLE_FLAT_FORM: "yes"
      ADMIN_USERS: "jean.pommier@pi-geosolutions.fr guillaume.grech@mnhn.fr"
      GEONETWORK_URL: "${HTTP_SCHEME}://${FQDN}/geonetwork"
      NF_MENU_URL: "https://naturefrance.fr/les-milieux-humides"

      JAVA_OPTS: >
        -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
        -Xms512M -Xss512M -Xmx1G -XX:+UseConcMarkSweepGC
        -Dgeonetwork.resources.dir=/catalog/data/resources
        -Dgeonetwork.data.dir=/catalog/data/metadata_data
        -Dgeonetwork.config.dir=/catalog/config
        -Dgeonetwork.codeList.dir=/catalog/config/codelist
        -Dgeonetwork.backup.dir=/catalog/data/backup
        -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins

      ES_HOST: elasticsearch
      ES_PROTOCOL: http
      ES_PORT: 9200

      KB_URL: http://kibana:5601

      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: database
      GEONETWORK_DB_PORT: 5432
      GEONETWORK_DB_NAME: geonetwork
      GEONETWORK_DB_USERNAME: geonetwork
      GEONETWORK_DB_PASSWORD: geonetwork
      GEONETWORK_MICROSERVICESPROXY_TARGETURI: http://ogc-api-records-service:8080
    volumes:
      - ./volumes/geonetwork_data:/catalog
    depends_on:
      - elasticsearch
      - database
    networks:
      - default

  ogc-api-records-service:
    image: geonetwork/gn-cloud-ogc-api-records-service:4.2.4-0
    environment:
      SPRING_PROFILES_ACTIVE: standalone
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/geonetwork
      SPRING_DATASOURCE_USERNAME: geonetwork
      SPRING_DATASOURCE_PASSWORD: geonetwork
      GN_BASEURL: ${HTTP_SCHEME}://${FQDN}/geonetwork/api
      GN_LEGACY_URL: ${HTTP_SCHEME}://${FQDN}/geonetwork
      GN_INDEX_URL: http://elasticsearch:9200
      SERVER_FORWARDHEADERSSTRATEGY: FRAMEWORK
      JAVA_OPTS: -Dfile.encoding=UTF-8

    depends_on:
      - database
      - elasticsearch
    networks:
      - default

  geoserver:
    image: pigeosolutions/geoserver:2.22.2-20230224-1636-32f9a73
    environment:
      GEOSERVER_CSRF_WHITELIST: ${FQDN}
      PROXY_BASE_URL: ${HTTP_SCHEME}://${FQDN}/geoserver
    volumes:
      - ./volumes/geoserver_datadir:/mnt/geoserver_datadir
      - ./volumes/geoserver_geodata:/mnt/geoserver_geodata
      - ./volumes/geoserver_tiles:/mnt/geoserver_tiles
    restart: unless-stopped
    networks:
      - default

  elasticsearch:
    image: elasticsearch:7.11.1
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      ES_JAVA_OPTS: "-Xms1G -Xmx1G"
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - default

  kibana:
    image: kibana:7.11.1
    environment:
      SERVER_NAME: 'kibana'
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      SERVER_BASEPATH: /geonetwork/dashboards
      SERVER_REWRITEBASEPATH: 'false'
      KIBANA_INDEX: .dashboards
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: 'true'
    networks:
      - default
